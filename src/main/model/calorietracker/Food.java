package model.calorietracker;

/**
 * Models a food item with calories and macronutrients
 * Creating a food only initializes it with a name.
 *
 * Users can create foods with only calories, only macronutrients, or both
 * Foods created with only macronutrients automatically calculate calories
 *
 * Calories generated by macros can be verified to equal calories input by user
 *
 */

public class Food {

    private String name;

    private int calories;
    private int fat;
    private int carbs;
    private int protein;

    // Constructs a new item
    // MODIFIES: this
    // EFFECTS: Creates a new food with a given name
    public Food(String name) {
        this.name = name;
        this.calories = 0;
        this.fat = 0;
        this.carbs = 0;
        this.protein = 0;
    }

    // REQUIRES: food name has been set by user
    // MODIFIES: nothing
    // EFFECT: Returns the name of the food
    public String getName() {
        return this.name;
    }

    // REQUIRES: calories has been set by user
    // MODIFIES: nothing
    // EFFECTS: Returns the calories in the food
    public int getCalories() {
        return this.calories;
    }

    // REQUIRES: nothing
    // MODIFIES: this
    // EFFECTS: Sets the calories of this food item to calorie parameter
    public boolean setCalories(int calories) {
        boolean validCals = false;

        if (calories >= 0) {
            this.calories = calories;
            validCals = true;
        }

        return validCals;
    }

    // REQUIRES: Fat, carbs, and proteins have been set by the user
    // MODIFIES: nothing
    // EFFECTS: Generates calorie count based on macronutrients set by the user,
    //          values calculated rounded to the nearest integer
    public int getCaloriesFromMacros() {
        return (this.fat * 10) + (this.carbs * 4) + (this.protein * 4);
    }

    // REQUIRES: fat has been set by user
    // MODIFIES: nothing
    // EFFECTS: Returns the amount of fat in the food
    public int getFat() {
        return this.fat;
    }

    // REQUIRES: nothing
    // MODIFIES: this
    // EFFECTS: Sets the value of fat as defined by the user
    public boolean setFat(int fat) {
        boolean fatAdded = false;
        if (fat >= 0) {
            this.fat = fat;
            fatAdded = true;
        }
        return fatAdded;
    }

    // REQUIRES: carbs has been set by the user
    // MODIFIES: nothing
    // EFFECTS: Returns the amount of fat in the food
    public int getCarbs() {
        return this.carbs;
    }

    // REQUIRES: nothing
    // MODIFIES: this
    // EFFECTS: sets the value of carbs as defined by the user
    public boolean setCarbs(int carbs) {
        boolean carbsAdded = false;
        if (carbs >= 0) {
            this.carbs = carbs;
            carbsAdded = true;
        }
        return carbsAdded;
    }

    // REQUIRES: protein has been set by the user
    // MODIFIES: nothing
    // EFFECTS: Returns the amount of protein in the food
    public int getProtein() {
        return this.protein;
    }

    // REQUIRES: nothing
    // MODIFIES: this
    // EFFECTS: sets the value of protein as defined by the user
    public boolean setProtein(int protein) {
        boolean proteinAdded = false;
        if (protein >= 0) {
            this.protein = protein;
            proteinAdded = true;
        }
        return proteinAdded;
    }

    // REQUIRES: both macronutrients and calories are set by the user
    // MODIFIES: nothing
    // EFFECTS: returns true if calories calculated by macros equate to calories input by user
    //          returns false if calories do not line up, margin of error to the closest 10
    public boolean verifyCalories() {
        int calsRounded = calories / 10;
        int calcCalsRounded = getCaloriesFromMacros() / 10;
        return calsRounded == calcCalsRounded;
    }

}
